# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  # boot.kernelPackages = pkgs.linuxPackages_latest;
  
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/e80f686b-0184-4390-8d31-b7debc5be1fe";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-acff4d53-6030-4bd6-8ee8-1fd9838934cb".device = "/dev/disk/by-uuid/acff4d53-6030-4bd6-8ee8-1fd9838934cb";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/67DB-E5DF";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/mnt/nvme1" = {
    device = "/dev/disk/by-uuid/2cafcc4b-2711-45b7-aaed-e3a013454281";
    fsType = "ext4";
    options = [  "users" "nofail" "exec"];
  };
 
  fileSystems."/mnt/sda1" = {
    device = "/dev/disk/by-uuid/9ec112f6-e742-431b-bfbf-aa06abff5ccf";
    fsType = "ext4";
    options = [ "users" "nofail" "exec"];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp7s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
